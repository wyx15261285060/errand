{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\n// import { Refresh } from 'element-ui/icons';\n\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        role: 'ADMIN'\n      },\n      timeLeft: 5,\n      captchaUrl: \"\",\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          trigger: \"change\",\n          message: \"请输入验证码\"\n        }]\n      }\n    };\n  },\n  created() {\n    this.refreshCaptcha();\n    //倒计时几秒60秒更新验证码\n    this.timerId = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        this.refreshCaptcha();\n        this.timeLeft = 5;\n      }\n    }, 1000);\n  },\n  methods: {\n    refreshCaptcha() {\n      axios.get('/auth/captcha').then(res => {\n        this.captchaUrl = res.data.data.code;\n        // 将key获取出来\n        this.form.uuid = res.data.data.uuid;\n        console.log(this.form.uuid);\n        this.timeLeft = 60;\n      });\n    },\n    login() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$router.push('/'); // 跳转主页\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","role","timeLeft","captchaUrl","rules","username","required","message","trigger","password","code","created","refreshCaptcha","timerId","setInterval","methods","get","then","res","uuid","console","log","login","$refs","validate","valid","$request","post","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 350px; padding: 50px 30px; background-color: white; border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #006eff;font-weight: bold\">欢迎使用\r\n      </div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password\r\n                    v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"code\">\r\n          <el-input placeholder=\"请输入验证码\" v-model=\"form.code\">\r\n            <template #append>\r\n              <el-icon class=\"refresh-icon\" @click=\"refreshCaptcha\">\r\n                <Refresh/>\r\n              </el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <div v-if=\"timeLeft > 0\">\r\n          <img :src=\"captchaUrl\" @click=\"refreshCaptcha\" />\r\n          <br>\r\n          验证码将在 <span>{{ timeLeft }}</span> 秒后刷新\r\n        </div>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: #006eff; border-color: #006eff; color: white\"\r\n                     @click=\"login\">登 录\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n// import { Refresh } from 'element-ui/icons';\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      form: {role: 'ADMIN'},\r\n      timeLeft: 5,\r\n      captchaUrl: \"\",\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n        ],\r\n        code: [\r\n          {required: true, trigger: \"change\", message: \"请输入验证码\"},\r\n        ]\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.refreshCaptcha();\r\n//倒计时几秒60秒更新验证码\r\n    this.timerId = setInterval(() => {\r\n      if (this.timeLeft > 0) {\r\n        this.timeLeft--;\r\n      } else {\r\n        this.refreshCaptcha();\r\n        this.timeLeft = 5;\r\n      }\r\n    }, 1000);\r\n  },\r\n  methods: {\r\n    refreshCaptcha() {\r\n      axios.get('/auth/captcha').then(res => {\r\n        this.captchaUrl = res.data.data.code\r\n        // 将key获取出来\r\n        this.form.uuid = res.data.data.uuid\r\n        console.log(this.form.uuid)\r\n        this.timeLeft = 60\r\n      });\r\n    },\r\n\r\n\r\n    login() {\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过\r\n          this.$request.post('/login', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\r\n              this.$router.push('/')  // 跳转主页\r\n              this.$message.success('登录成功')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/bg.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\n\r\na {\r\n  color: #2a60c9;\r\n}\r\n\r\n.refresh-icon {\r\n  font-size: 16px; /* 设置图标大小 */\r\n  color: #333; /* 设置图标颜色 */\r\n}\r\n</style>"],"mappings":";AAsCA,OAAAA,KAAA;AACA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QAAAC,IAAA;MAAA;MACAC,QAAA;MACAC,UAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,IAAA,GACA;UAAAJ,QAAA;UAAAE,OAAA;UAAAD,OAAA;QAAA;MAEA;IACA;EACA;EACAI,QAAA;IACA,KAAAC,cAAA;IACA;IACA,KAAAC,OAAA,GAAAC,WAAA;MACA,SAAAZ,QAAA;QACA,KAAAA,QAAA;MACA;QACA,KAAAU,cAAA;QACA,KAAAV,QAAA;MACA;IACA;EACA;EACAa,OAAA;IACAH,eAAA;MACAf,KAAA,CAAAmB,GAAA,kBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAf,UAAA,GAAAe,GAAA,CAAAnB,IAAA,CAAAA,IAAA,CAAAW,IAAA;QACA;QACA,KAAAV,IAAA,CAAAmB,IAAA,GAAAD,GAAA,CAAAnB,IAAA,CAAAA,IAAA,CAAAoB,IAAA;QACAC,OAAA,CAAAC,GAAA,MAAArB,IAAA,CAAAmB,IAAA;QACA,KAAAjB,QAAA;MACA;IACA;IAGAoB,MAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAA3B,IAAA,EAAAiB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAR,IAAA;cACAkB,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAb,GAAA,CAAAnB,IAAA;cACA,KAAAiC,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAlB,GAAA,CAAAmB,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
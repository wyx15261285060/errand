{"ast":null,"code":"export default {\n  name: \"Order\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      OrderNo: null,\n      form: {},\n      fromVisible: false,\n      fromVisible1: false,\n      order: JSON.parse(localStorage.getItem('xm-order') || '{}'),\n      ids: [],\n      address: {}\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    showAddress(addressId) {\n      this.$request.get('/address/selectById/ ' + addressId).then(res => {\n        this.address = res.data || {};\n        this.fromVisible1 = true;\n      });\n    },\n    handleEdit(row) {\n      // 编辑订单状态 \n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$request({\n        url: this.form.id ? '/order/update' : '/order/add',\n        method: this.form.id ? 'PUT' : 'POST',\n        data: this.form\n      }).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('保存成功');\n          this.load(1);\n          this.fromVisible = false;\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/order/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    // 当前选中的所有的行数据\n    handleSelectionChange(rows) {\n      // map函数将选中的行的id值转换为一个数组，并将该数组赋值给this.ids变量\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/order/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/order/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          OrderNo: this.OrderNo\n        }\n      }).then(res => {\n        // ?. 是可选链操作符\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.OrderNo = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","OrderNo","form","fromVisible","fromVisible1","order","JSON","parse","localStorage","getItem","ids","address","created","load","methods","showAddress","addressId","$request","get","then","res","handleEdit","row","stringify","save","url","id","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Order.vue"],"sourcesContent":["<template>\r\n  <!-- 用户管理页面 -->\r\n  <div>\r\n    <!-- 搜索框 -->\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入订单编号查询\" style=\"width: 200px\" v-model=\"OrderNo\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n<!--    <div class=\"operation\">-->\r\n<!--      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>-->\r\n<!--    </div>-->\r\n    <div style=\"margin-bottom: 20px\"></div>\r\n    <!-- 表格栏 -->\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"orderNo\" label=\"订单编号\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"物品名称\"></el-table-column>\r\n        <el-table-column prop=\"descr\" label=\"描述\"></el-table-column>\r\n        <el-table-column prop=\"img\" label=\"物品图片\"> \r\n        <template v-slot=\"scope\">\r\n          <el-image :src=\"scope.row.img\" style=\"width: 50px; border-radius: 5px\"\r\n            :preview-src-list=\"[scope.row.img]\"></el-image>\r\n        </template>\r\n      </el-table-column>\r\n        <el-table-column prop=\"type\" label=\"物品类型\"></el-table-column>\r\n        <el-table-column prop=\"weight\" label=\"物品重量\"></el-table-column>\r\n        <el-table-column prop=\"price\" label=\"小费\"></el-table-column>\r\n        <el-table-column prop=\"userName\" label=\"发起人\"></el-table-column>\r\n        <el-table-column prop=\"acceptName\" label=\"接单人\"></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"创建时间\"></el-table-column>\r\n        <el-table-column prop=\"acceptTime\" label=\"接单时间\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"订单状态\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '已取消'\">已取消</el-tag>\r\n            <el-tag type=\"Info\" v-if=\"scope.row.status === '待接单'\">待接单</el-tag>\r\n            <el-tag type=\"primary\" v-if=\"scope.row.status === '待送达'\">待送达</el-tag>\r\n            <el-tag type=\"primary\" v-if=\"scope.row.status === '待收货'\">待收货</el-tag>\r\n            <el-tag type=\"warning\" v-if=\"scope.row.status === '待评价'\">待评价</el-tag>\r\n            <el-tag type=\"success\" v-if=\"scope.row.status === '已完成'\">已完成</el-tag>\r\n            <el-tag type=\"warning\" v-if=\"scope.row.status === '已超时'\">已超时</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"addressId\" label=\"取货信息\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"parimary\" size=\"mini\" @click = showAddress(scope.row.addressId)>查看</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"targetId\" label=\"送货信息\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"parimary\" size=\"mini\"@click = showAddress(scope.row.targetId)>查看</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"comment\" label=\"订单备注\"></el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"150\" fixed=\"right\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n<!--            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>-->\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination background @current-change=\"handleCurrentChange\" :current-page=\"pageNum\"\r\n          :page-sizes=\"[5, 10, 20]\" :page-size=\"pageSize\" layout=\"total, prev, pager, next\" :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\">\r\n        <el-form-item prop=\"status\" label=\"订单状态\">\r\n          <el-select v-model=\"form.status\" style=\"width: 100%\">\r\n            <el-option value=\"已取消\"></el-option>\r\n            <el-option value=\"待接单\"></el-option>\r\n            <el-option value=\"待送达\"></el-option>\r\n            <el-option value=\"待收货\"></el-option>\r\n            <el-option value=\"待评价\"></el-option>\r\n            <el-option value=\"已完成\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"地址信息\" :visible.sync=\"fromVisible1\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\">\r\n        <el-form-item  label=\"地址: \">\r\n          <div>{{ address.address }}</div>\r\n        </el-form-item>\r\n        <el-form-item  label=\"门牌号: \">\r\n          <div>{{ address.doorNo }}</div>\r\n        </el-form-item>\r\n        <el-form-item  label=\"联系人: \">\r\n          <div>{{ address.userName }}</div>\r\n        </el-form-item>\r\n        <el-form-item  label=\"联系电话: \">\r\n          <div>{{ address.phone }}</div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"fromVisible1 = false\">关 闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Order\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      OrderNo: null,\r\n      form: {},\r\n      fromVisible: false,\r\n      fromVisible1:false,\r\n      order: JSON.parse(localStorage.getItem('xm-order') || '{}'),\r\n      ids: [],\r\n      address:{},\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    showAddress(addressId){\r\n      this.$request.get('/address/selectById/ '+ addressId)\r\n      .then(res => {\r\n        this.address = res.data || {};\r\n        this.fromVisible1 = true;\r\n      })\r\n    },\r\n    handleEdit(row) {   // 编辑订单状态 \r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$request({\r\n        url: this.form.id ? '/order/update' : '/order/add',\r\n        method: this.form.id ? 'PUT' : 'POST',\r\n        data: this.form\r\n      }).then(res => {\r\n        if (res.code === '200') {  // 表示成功保存\r\n          this.$message.success('保存成功')\r\n          this.load(1)\r\n          this.fromVisible = false\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', { type: \"warning\" }).then(response => {\r\n        this.$request.delete('/order/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    // 当前选中的所有的行数据\r\n    handleSelectionChange(rows) {\r\n      // map函数将选中的行的id值转换为一个数组，并将该数组赋值给this.ids变量\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', { type: \"warning\" }).then(response => {\r\n        this.$request.delete('/order/delete/batch', { data: this.ids }).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/order/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          OrderNo: this.OrderNo,\r\n        }\r\n      }).then(res => {\r\n        // ?. 是可选链操作符\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.OrderNo = null\r\n      this.load(1);\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}